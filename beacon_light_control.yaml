blueprint:
  name: 存在感知灯控蓝图
  description: 通过人体存在传感器和物理按钮实现智能灯光控制，基于太阳高度角，传感器触发有间隔限制
  domain: automation
  input:
    sensor_entity:
      name: 存在传感器
      description: 持续监测人体存在的二进制传感器
      selector:
        entity:
          domain: binary_sensor
    button_entity:
      name: 物理按钮
      description: 用于手动关闭灯光的无线开关/实体按钮
      selector:
        entity:
          domain: binary_sensor
    light_entity:
      name: 被控灯具
      description: 需要智能控制的照明设备（可多选）
      selector:
        entity:
          domain: light
          multiple: true
    sunset_elevation:
      name: 日落高度角
      description: 日落后允许开灯的太阳高度角（负值表示地平线以下）
      default: -6
      selector:
        number:
          min: -90
          max: 90
          unit_of_measurement: degrees
    sunrise_elevation:
      name: 日出高度角
      description: 日出前允许开灯的太阳高度角（负值表示地平线以下）
      default: -6
      selector:
        number:
          min: -90
          max: 90
          unit_of_measurement: degrees

trigger:
  - platform: state
    entity_id: !input sensor_entity
    from: 'off'
    to: 'on'
    id: sensor_trigger
  - platform: state
    entity_id: !input button_entity
    from: 'off'
    to: 'on'
    id: button_trigger

variables:
  sunset_elevation: !input sunset_elevation
  sunrise_elevation: !input sunrise_elevation
  current_elevation: "{{ state_attr('sun.sun', 'elevation') }}"
  target_elevation: "{{ sunset_elevation if now().hour >= 12 else sunrise_elevation }}"
  # 跟踪上一次传感器触发时间，仅用于开灯逻辑
  last_trigger_time: "{{ states('input_datetime.last_beacon_trigger') if states('input_datetime.last_beacon_trigger') != 'unknown' else '1970-01-01 00:00:00' }}"
  time_since_last_trigger: "{{ (now() - as_timestamp(last_trigger_time)|timestamp_local).total_seconds() }}"

action:
  - choose:
      # 存在感知开灯逻辑（包含触发间隔检查）
      - conditions:
          - condition: trigger
            id: sensor_trigger
          - condition: state
            entity_id: !input light_entity
            state: 'off'
          - condition: template
            value_template: "{{ current_elevation <= target_elevation }}"
          - condition: template
            value_template: "{{ time_since_last_trigger > 30 }}"
        sequence:
          - service: light.turn_on
            entity_id: !input light_entity
          # 更新上一次触发时间
          - service: input_datetime.set_datetime
            data:
              datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
            target:
              entity_id: input_datetime.last_beacon_trigger
      
      # 物理按钮关灯逻辑（无时间限制）
      - conditions:
          - condition: trigger
            id: button_trigger
        sequence:
          - service: light.turn_off
            entity_id: !input light_entity
